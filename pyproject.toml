# Build properties for deployment.
[build-system]
requires = ['setuptools>=40.8.0', 'wheel']
build-backend = 'setuptools.build_meta:__legacy__'


# region Core Project Settings and Metadata

[project]
name = "django-expanded-test-cases"
description = "Expands the existing Django TestCase class with extra functionality."
readme = "readme.md"
authors = [
    { name = "Brandon Rodriguez", email = "brodriguez8774@gmail.com" },
]
maintainers = [
    { name = "Brandon Rodriguez", email = "brodriguez8774@gmail.com" },
]
license = { file = "LICENSE" }
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 2",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Testing",
]
keywords = [
    "django",
    "testcases",
    "tests",
    "unittest",
    "unittesting",
]
requires-python = ">=3.6"
dependencies = [
    "django >= 2.2.0",
    "beautifulsoup4 >= 4.11.0",
]
dynamic = ["version"]


[project.optional-dependencies]
dev = [
    "black",
    "coverage",
    "pylint",
    "pylint-django",
]
doc = [
    "doc8",
    "pip-tools",
    "rstcheck",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-rtd-theme",
]
test = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "pytest-xdist",
]


[project.urls]
Homepage = "https://github.com/brodriguez8774/django-expanded-test-cases"
Documentation = "https://django-expanded-test-cases.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/brodriguez8774/django-expanded-test-cases/issues"
"Source Code" = "https://github.com/brodriguez8774/django-expanded-test-cases"

# endregion Core Project Settings and Metadata


# region Third-Party Package Settings

# "Black" formatter settings.
[tool.black]
line-length = 120
skip-string-normalization = 1

# endregion Third-Party Package Settings


# region Testing Settings

[tool.pytest.ini_options]
python_files = ["tests.py", "tests/test_*.py"]

DJANGO_SETTINGS_MODULE = "tests.settings"
pythonpath = "."
# Constructed as
#   {action}:{message}:{category}:{module}:{lineno}
#
# For more details, see:
#   https://docs.pytest.org/en/stable/how-to/capture-warnings.html
#   https://docs.python.org/3/library/warnings.html#warning-filter
#   https://stackoverflow.com/questions/57925071/how-do-i-avoid-getting-deprecationwarning-from-inside-dependencies-with-pytest
filterwarnings = ""


[tool.coverage.run]
branch = true
omit = [
    # Omit the virtual environment.
    "./.venv/*",
    # Omit the test folders.
    "*/tests/*",
    "*/tests.py",
    # Omit the migration folders.
    "*/migrations/*",
    # Omit django files.
    "*/manage.py",
    "*/wsgi.py",
    "*/settings.py",
    "*/asgi.py",
    # Omit management commands.
    "*/management/commands/*.py",
    # Omit init files.
    "*/__init__.py",
    # Omit setup files.
    "./setup.py",
    # Omit Testing Scripts.
    "./runpytests.py",
    "./runtests.py",
]

# endregion Testing Settings
